# @alsoload ../../test/yellow1-proof.n3 ../../aux/trace/aux_trace.n3 ../../aux/trace/aggr/aux_aggr.n3 ../../aux/trace/aggr/aggregate_evidence.n3 describe.n3

@prefix dc: <http://purl.org/dc/terms/> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix pml: <http://provenanceweb.org/ns/pml#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix r: <http://www.w3.org/2000/10/swap/reason#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix x: <http://wvw.org/xai#> .
@base <http://wvw.org/xai#> .


{
   ?x a ?type .
   ?type list:in ( r:Extraction r:Fact ) .
   ?x x:conclusionStr ?str .
   ( "<li class='fact'>" ?str "</li>" ) string:concatenation ?html .
}
=> 
{
   ?x x:output ?html 
} .


#
{
   ?inf a x:NodeOfInterest ;
       x:evidence ?evidences .
   ?evidences list:removeDuplicates ?evidences2 .
   (
       ?li
       {
           ?evidence list:in ?evidences2 ;
               x:output ?li 
       }
       ?lis
   ) log:collectAllIn _:x .
   ?evidences2!list:length math:equalTo ?lis!list:length .
   ?lis string:concatenation ?lisStr .
   ?inf x:conclusionStr ?label .
		# x:ruleStr ?ruleStr ;
		# x:sourceStr ?sourceStr ;
		# x:bindingStr ?bindingStr .
   ( ?label "</span><span" "</span><br /><span" ) string:replace ?label2 .
	
	# ( 	"<div class='rule'>" ?ruleStr "</div>"
	# 	"<div class='bindings'>" ?bindingStr "</div>"
	# 	"<div class='source'>(from: " ?sourceStr ")</div>" ) string:concatenation ?ruleInfo .
   ( "<li class='inf'>" ?label2 " "
			# "<span class='showHideRule'>(show rule)</span>"
			# "<div class='ruleInfo'>" ?ruleInfo "</div>"
   "<ul>" ?lisStr "</ul>" "</li>" ) string:concatenation ?html .
}
=> 
{
   ?inf x:output ?html 
} .
