# @concrete
# @involves 'n3/modules/aux.n3'
# @requires x:isComparator , 'n3/ontology/Proof.n3'

@prefix : <http://niche.cs.dal.ca/ns/copd.owl#> .
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#> .
@prefix graph: <http://www.w3.org/2000/10/swap/graph#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix x: <http://wvw.org/xai#> .


# if no comparisons: divide body into separate triples
{
   ?x => ?y ;
       a x:InputRule .
   ?x x:getComparisons ( ) .
   ?x!e:labelvars x:get ?x2 .
   ?y!e:labelvars x:get ?y2 .
   _:t log:notIncludes 
   {
       ?y2 x:inverted ?x2 
   } .
   ?x2 graph:member ?t2 .
}
=> 
{
   ?y2 => ?t2 
} .

# in case of comparisons: keep body whole
{
   ?x => ?y ;
       a x:InputRule .
   ?x!x:getComparisons!list:length math:greaterThan 0 .
   ?x!e:labelvars x:get ?x2 .
   ?y!e:labelvars x:get ?y2 .
   # avoid same rule being inverted multiple times
   # (possible when rule head acts as rule body in other rule; 
   # i.e., it is also annotated w/ x:InputRule)
   _:t log:notIncludes 
   {
       ?y2 x:inverted ?x2 
   } .
}
=> 
{
   ?y2 => ?x2 .
   ?x2 x:inverted ?y2 .
} .


#
{
   ?f x:get ?f2 
}
<= 
{
   ?f log:rawType log:Formula .
   (
       {
           ?s2 ?p2 ?o2 
       }
       {
           ?f e:graphMember 
           {
               ?s ?p ?o 
           } .
           ?s x:get ?s2 .
           ?p x:get ?p2 .
           ?o x:get ?o2 .
       }
       ?rws
   ) log:collectAllIn _:t .
   ?rws log:conjunction ?f2 .
   # ( "!" ) e:derive true
} .


#
{
   ?c x:get ?c2 
}
<= 
{
   ?c log:rawType rdf:List .
   (
       ?e2
       {
           ?c!list:member x:get ?e2 
       }
       ?c2
   ) log:collectAllIn _:t .
   # ( "!" ) e:derive true
} .


#
{
   ?t x:get ?t2 
}
<= 
{
   ?t log:rawType log:Other .
   ?t log:uri ?tStr .
   ?tStr string:matches "http://www.w3.org/2000/10/swap/.*" .
   ( ?tStr "http://www.w3.org/2000/10/swap/" "http://wvw.org/xai/swap/" ) string:replace ?tStr2 .
   ?t2 log:uri ?tStr2 .
   # ( "!" ) e:derive true
} .


#
{
   ?t x:get ?t 
}
<= 
{
   ?t log:rawType log:Other .
   ?t!log:uri string:notMatches "http://www.w3.org/2000/10/swap/.*" .
   # ( "!" ) e:derive true
} .


#
{
   ?t x:get ?t 
}
<= 
{
   ?t log:rawType log:Literal .
   # ( "!" ) e:derive true
} .


#
{
   ?f x:getComparisons ?cmps 
}
<= 
{
   (
       ?p
       {
           ?f graph:member 
           {
               ?x ?p ?y 
           } .
           ?p x:isComparator true .
       }
       ?cmps
   ) log:collectAllIn _:t .
} .
